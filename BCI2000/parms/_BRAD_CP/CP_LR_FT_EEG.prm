Visualize:Property%20Sets matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left", columns are property sets
System:Configuration matrix OperatorVersion= { Framework Revision Build } 1 3.0.5 4229,%202012/07/03%2018:02:30 2012/07/03%2020:12:06 // operator module version information
System:Additional%20Connections int OperatorBackLink= 1 1 0 1 // Send final state and signal information to Operator (boolean)
Source:Signal%20Properties:DataIOFilter int SourceCh= 128 16 1 % // number of digitized and stored channels
Source:Signal%20Properties:DataIOFilter int SampleBlockSize= 40 32 1 % // number of samples transmitted at a time
Source:Signal%20Properties:DataIOFilter int SamplingRate= 1024 256Hz 1 % // sample rate
Source:Signal%20Properties:DataIOFilter floatlist SourceChOffset= 128 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 % % // Offset for channels in A/D units
Source:Signal%20Properties:DataIOFilter floatlist SourceChGain= 128 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.03125 0.003 % % // gain for each channel (A/D units -> muV)
Source:Signal%20Properties:DataIOFilter list ChannelNames= 128 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 // list of channel names
Storage:Data%20Location:DataIOFilter string DataDirectory= D:/Brad/bci_Continuous/BCI2000/data/xx ..\data % % // path to top level data directory (directory)
Storage:Session:DataIOFilter string SubjectName= xx_CP_LR_BASELINE_2016mmdd Name % % // subject alias
Storage:Session:DataIOFilter string SubjectSession= 001 001 % % // three-digit session number
Storage:Session:DataIOFilter string SubjectRun= 01 00 % % // two-digit run number
Storage:Documentation:DataIOFilter string ID_System= % // BCI2000 System Code
Storage:Documentation:DataIOFilter string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation:DataIOFilter string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing:DataIOFilter int VisualizeTiming= 0 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceDecimation= 1 auto % % // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceTime= 2 2s 0 % // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter int SourceMin= -100muV -100muV % % // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter int SourceMax= 100muV 100muV % % // raw signal vis Max Value
Source:Biosemi2ADC intlist EEGChList= 128 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 % 1 % // list of physical channel indices for the EEG channels in use
Source:Biosemi2ADC intlist AIBChList= 0 % 1 32 // list of Auxiliary Input Box channels to acquire after the EEG channels (included in the SourceCh total)
Source:Biosemi2ADC intlist TriggerChList= 0 % 0 16 // list of one-bit trigger channels to append to the end (included in the SourceCh total) or a single 0 to acquire all trigger channels as a single 16-bit channel
Storage:Documentation:BCI2000FileWriter string StorageTime= 2015-10-29T09:09:54 // time of beginning of data storage
Source:Source%20Filter:SourceFilter int NotchFilter= 2 0 0 2 // Power line notch filter: 0: disabled, 1: at 50Hz, 2: at 60Hz (enumeration)
Source:Source%20Filter:SourceFilter int HighPassFilter= 2 0 0 2 // Source high pass filter: 0: disabled, 1: at 0.1Hz, 2: at 1Hz (enumeration)
Source:Source%20Filter:SourceFilter int LowPassFilter= 0 0 0 4 // Source low pass filter: 0: disabled, 1: at 9Hz, 2: at 30Hz, 3: at 40Hz, 4: at 70Hz (enumeration)
Source:Alignment:AlignmentFilter int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing:TransmissionFilter list TransmitChList= 128 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 // list of transmitted channels
System:Additional%20Connections:EventLink int EventLink= 1 1 0 1 // Send events from Operator to Source module (boolean)
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP
System:Core%20Connections string SignalSourcePort= 54271 4200 1024 65535 // the SignalSource module's listening port
System:Core%20Connections string SignalSourceIP= 160.94.106.29 127.0.0.1 % % // the SignalSource module's listening IP
System:Configuration matrix SignalSourceVersion= { Framework Revision Build } 1 3.0.5 4229,%202012/07/03%2018:02:30 2012/07/03%2020:12:06 // SignalSource version information
System:Configuration matrix SignalSourceFilterChain= 9 { Filter%20Name Position%20String } DataIOFilter 0 Biosemi2ADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 SourceFilter 1.01 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
Filtering:FieldTrip%20Buffer:FieldTripBufferFilter string FTBufferAddress= localhost:1972 // Buffer listening address
Filtering:FieldTrip%20Buffer:FieldTripBufferFilter matrix FTInitialOutput= 2 1 0 0 0 % % // Initial filter output (rows map to channels, columns map to elements)
Filtering:FieldTrip%20Buffer:FieldTripBufferFilter string FTOutputEventType= Signal // Event type corresponding to output signal
Filtering:FieldTrip%20Buffer:FieldTripBufferFilter stringlist FTStatesToBuffer= 5 * -Running -Recording -SourceTime -StimulusTime // States to be written as events to buffer (* to indicate any state; leading - to exclude; FTStatesFromBuffer are always excluded)
Filtering:FieldTrip%20Buffer:FieldTripBufferFilter stringlist FTStatesFromBuffer= 0 // States to be read as events from buffer
Filtering:ExpressionFilter string StartRunExpression= % // expression executed on StartRun
Filtering:ExpressionFilter string StopRunExpression= % // expression executed on StopRun
Filtering:ExpressionFilter matrix Expressions= 2 1 signal(1,1) signal(2,1) // expressions used to compute the output of the ExpressionFilter (rows are channels; empty matrix for none)
System:Core%20Connections string SignalProcessingPort= 54273 4200 1024 65535 // the SignalProcessing module's listening port
System:Core%20Connections string SignalProcessingIP= 160.94.106.29 127.0.0.1 % % // the SignalProcessing module's listening IP
System:Configuration matrix SignalProcessingVersion= { Framework Revision Build } 1 3.0.5 4229,%202012/07/03%2018:02:30 2012/07/03%2020:12:06 // SignalProcessing version information
System:Configuration matrix SignalProcessingFilterChain= 2 { Filter%20Name Position%20String } FieldTripBufferFilter 2.B ExpressionFilter 2.C // SignalProcessing filter chain
Visualize:Processing%20Stages int VisualizeFieldTripBufferFilter= 0 0 0 1 // Visualize FieldTripBufferFilter output (boolean)
Visualize:Processing%20Stages int VisualizeExpressionFilter= 0 0 0 1 // Visualize ExpressionFilter output (boolean)
Connector:ConnectorInput list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:ConnectorInput string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Connector:ConnectorOutput string ConnectorOutputAddress= localhost:45443 localhost:20320 % % // IP address/port to write to, e.g. localhost:20320
Application:Localization:Localization string Language= Default Default % % // Language for user messages
Application:Localization:Localization matrix LocalizedStrings= { German } { Timeout Be%20prepared%20... T } Inaktiv Achtung%20... T // Localized user messages
System:Command%20Line%20Arguments variant PythonAppClassFile= BCIApplication_ContinuousPursuit2.py BCIApplication_ContinuousPursuit2.py BCIApplication_ContinuousPursuit2.py BCIApplication_ContinuousPursuit2.py 
Source:Signal%20Properties:DataIOFilter list ReferenceChannelName= 0 % % a // list of labels for reference channel or channels
Source:Signal%20Properties:DataIOFilter list GroundChannelName= 0 % % a // label of the ground channel
Source:Playback int EnslavePython= 0 0 0 1 // force BCPy2000 modules to follow states supplied by the source module without being able to change them (boolean)
PythonApp string ApplicationDescription= continuous%20pursuit%20task % a z // Identifies the stimulus presentation module
PythonApp int ShowSignalTime= 0 0 0 1 // show a timestamp based on the number of processed samples (boolean)
PythonApp:Design int TrialsPerBlock= 1 20 1 % // number of trials in one block
PythonApp:Design int BlocksPerRun= 1 20 1 % // number of sub-blocks in one run
PythonApp:Design int ShowFixation= 0 0 0 1 // show a fixation point in the center (boolean)
PythonApp:Design int ControlDim= 1 0 0 2 // Control Dimension: 1=1D-Horizontal, 2=1D-Vertical, 3=2D (enumeration)
PythonApp:Screen int ScreenId= -1 -1 % % // on which screen should the stimulus window be opened - use -1 for last
PythonApp:Screen float WindowHeight= 1200 100 % % // height of the stimulus window
PythonApp:Screen float WindowWidth= 1200 100 % % // width of the stimulus window
PythonApp:Screen float WindowLeft= -1575 100 % % // horizontal position of the stimulus window
PythonApp:Screen float WindowTop= 0 100 % % // vertical position of the stimulus window
PythonApp:Stimuli int CursorSize= 10 10 0 100 // diameter of cursor
PythonApp:Stimuli int TargetSize= 40 40 0 200 // diameter of target
PythonApp:Stimuli float TargetFriction= 1 1 0 10 // constant damping force on target movement
PythonApp:Stimuli float TargetViscosity= 1 1 0 10 // damping force proportional to velocity
PythonApp:Stimuli float TargetVariance= 3 1.0 0.0 10.0 // variance of force applied to target
PythonApp:Feedback int CursorFeedback= 1 1 0 1 // show online feedback cursor (boolean)
PythonApp:Feedback float CursorFriction= 1 1 0 10 // constant damping force on cursor movement
PythonApp:Feedback float CursorViscosity= 1 1 0 10 // damping force proportional to velocity
PythonApp:Feedback int ControlType= 2 0 0 2 // 1=force-based, 2=velocity-based, 0=let program choose
System:Core%20Connections string ApplicationPort= 54276 4200 1024 65535 // the Application module's listening port
System:Core%20Connections string ApplicationIP= 160.94.106.29 127.0.0.1 % % // the Application module's listening IP
System:Configuration matrix ApplicationVersion= { Framework Revision Build } 1 3.0.2 % Jul%2010%202011%2013:44:01 // Application version information
System:Configuration matrix ApplicationFilterChain= 3 { Filter%20Name Position%20String } ConnectorInput 2.9999 PythonAppFilter 3 ConnectorOutput 3.9999 // Application filter chain
Visualize:Processing%20Stages int VisualizePythonAppFilter= 0 0 0 1 // Visualize PythonAppFilter output (boolean)
System:Randomization int RandomSeed= 25465 0 % % // seed for the BCI2000 pseudo random number generator
System:Randomization int RandomizationWarning= 1 1 0 1 // warn if subsequent Runs have identical RandomSeed value (boolean)
